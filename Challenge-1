//Identify corrupted data packets

#include <stdio.h>
#include <stdint.h>
#include <stdbool.h>

#define MAX_PACKET_DATA_LENGTH (50)

typedef struct data_packet_t {
    uint8_t id;
    uint8_t data_length;
    uint8_t data[MAX_PACKET_DATA_LENGTH];
    uint16_t crc;
} data_packet_t;

// Function to check if a data packet is corrupted
bool isPacketCorrupted(data_packet_t* packet) {
    // Calculate the CRC of the packet
    uint16_t calculatedCRC = 0;

    calculatedCRC ^= packet->id;
    calculatedCRC ^= packet->data_length;

    for (int i = 0; i < packet->data_length; i++) {
        calculatedCRC ^= packet->data[i];
    }

    // Compare the calculated CRC with the packet's CRC
    if (calculatedCRC != packet->crc) {
        return true; // Corrupted packet
    }

    return false; // Packet is not corrupted
}

int main() {
    data_packet_t packet;

    printf("Enter packet ID: ");
    scanf("%hhu", &packet.id);

    printf("Enter data length: ");
    scanf("%hhu", &packet.data_length);

    printf("Enter data (up to %d bytes): ", MAX_PACKET_DATA_LENGTH);
    for (int i = 0; i < packet.data_length; i++) {
        scanf("%hhu", &packet.data[i]);
    }

    printf("Enter CRC: ");
    scanf("%hu", &packet.crc);

    if (isPacketCorrupted(&packet)) {
        printf("Packet is corrupted.\n");
    } else {
        printf("Packet is not corrupted.\n");
    }

    return 0;
}
